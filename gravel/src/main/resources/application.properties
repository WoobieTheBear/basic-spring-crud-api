
# connection details PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/tutorial_db
# [INFO]: this user and password is referenced in ./01_setup-data.sql
spring.datasource.username=tutorial_user
spring.datasource.password=th3-P455word+f0r-Connection
spring.jpa.open-in-view = true
# [INFO]: following line is redundant
spring.datasource.driver-class-name=org.postgresql.Driver
# spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
# [WARNING]: following statement will "execute drop table if exists <table-name> cascade"
# spring.jpa.hibernate.ddl-auto = create
# [INFO]: following statement will keep existing data
# spring.jpa.hibernate.ddl-auto = update

# set custom global spring variables
maintainer.name = Mr. Black
maintainer.email = tester@test.com

# server settings
server.port = 8837
server.servlet.context-path = /black

# data rest settings
# [INFO]: following line will make all automated rest endpoints 
#         available under /<context-path>/api/<class-name>
spring.data.rest.base-path = /api
spring.data.rest.default-page-size = 20
spring.data.rest.max-page-size = 200

# management settings
# [INFO]: following line will make all spring components to load lazy by default
# spring.main.lazy-initialization = true
management.endpoints.web.base-path = /check
management.endpoints.web.exposure.include = health, info, auditevents, beans, threaddump, mappings
management.info.env.enabled = true
info.crud.author = Mr. Black
info.crud.description = The basic setup for spring boot and postgresql crud
info.crud.version = 1.0.0
spring.main.banner-mode = off

# logging definitions (legel can be DEBUG, TRACE, WARN, ERROR)
logging.level.root = WARN
logging.level.ch.black = DEBUG
logging.level.org.hibernate.SQL = WARN
logging.level.org.hibernate.orm.jdbc.bind = WARN
# [NOTE] following line logs security relevant information
#        make sure to remove it in production
# logging.level.org.springframework.jdbc.core = TRACE
logging.file.name = black.log
logging.file.path = ./
logging.pattern.console = %d{yyyy-MM-dd'T'HH:mm:ss.SSSXXX} [%p] %c{1.} :|: %m%n
logging.pattern.file = { "_time": "%d{yyyy-MM-dd'T'HH:mm:ss.SSSXXX}", "level": "%p", "originPath": "%c{1.}", "message": "%replace(%m){'"', ''}" }%n

# security definitions
spring.security.user.name = admin
spring.security.user.password = My4dmin+Pa55word

